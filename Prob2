{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\tWelcome to 'Guess My Number'!\n",
      "\tThink of a number between 1 and 100.\n",
      "\tThe Computer will try to guess it in as few attempts as possible.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "def print_header():\n",
    "    print(\"\\tWelcome to 'Guess My Number'!\")\n",
    "    print(\"\\tThink of a number between 1 and 100.\")\n",
    "    print(\"\\tThe Computer will try to guess it in as few attempts as possible.\\n\")\n",
    "    \n",
    "def bin_search(the_number):\n",
    "    low = 1\n",
    "    high = 100\n",
    "    counter = 0\n",
    "    trip = False\n",
    "    \n",
    "    while trip == False:\n",
    "        counter += 1\n",
    "        median = (low + high) // 2\n",
    "        \n",
    "        print(\"The Computer guesses: \" + str(median))\n",
    "        \n",
    "        if median == the_number:\n",
    "            trip = True\n",
    "            return counter\n",
    "        elif median > the_number:\n",
    "            high = median - 1\n",
    "        else:\n",
    "            low = median + 1\n",
    "\n",
    "def main():\n",
    "    \n",
    "    print_header()\n",
    "    the_number = int(input(\"Choose a number between 1 and 100: \"))\n",
    "    counter = bin_search(the_number)\n",
    "    print(\"The Computer guessed your number: \" + str(the_number) + \", with \" + str(counter) + \" attempts.\")    \n",
    "    \n",
    "main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
